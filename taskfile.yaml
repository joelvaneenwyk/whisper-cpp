# https://taskfile.dev
# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"

vars:
  VCPKG_BOOTSTRAP_BAT: "{{.TASKFILE_DIR}}/external/vcpkg/bootstrap-vcpkg.bat"
  VCPKG_BOOTSTRAP_SH: "{{.TASKFILE_DIR}}/external/vcpkg/bootstrap-vcpkg.sh"
  VCPKG_EXE: >-
    {{.TASKFILE_DIR}}/external/vcpkg/vcpkg{{if eq OS "windows"}}.exe{{end}}
  VCPKG_BOOTSTRAP: '{{if eq OS "windows"}}{{.VCPKG_BOOTSTRAP_BAT}}{{ else }}{{.VCPKG_BOOTSTRAP_SH}}{{ end }}'
  RUN_WINDOWS: "cmd /D /E:ON /C"
  RUN_UNIX: "sh -c"
  RUN: '{{if eq OS "windows"}}{{.RUN_WINDOWS}}{{ else }}{{.RUN_UNIX}}{{ end }}'

  MSBUILD_EXE_RAW:
    sh: |
      strings=("Preview" "Enterprise" "Professional" "Community")
      for str in "${strings[@]}"
      do
        result="C:/Program Files/Microsoft Visual Studio/2022/${str}/MSBuild/Current/Bin/amd64/MSBuild.exe"
        if [ -e "$result" ]; then
          echo "$result"
          break
        fi
      done
  MSBUILD_EXE: "{{fromSlash .MSBUILD_EXE_RAW}}"
  BUILD_INT_DIR: "{{.TASKFILE_DIR}}/.build/tasks"
  BUILD_DIR: "{{fromSlash .BUILD_INT_DIR}}"

  CONFIG: Release
  ARCHITECTURE: x64
  USE_SDL2: ON
  GENERATOR: '{{if eq OS "windows"}}Visual Studio 17 2022{{else}}Unix Makefiles{{end}}'
  TOOLCHAIN: "{{.TASKFILE_DIR}}/external/vcpkg/scripts/buildsystems/vcpkg.cmake"
  SLN: '{{ joinPath .BUILD_DIR "whisper.cpp.sln" | fromSlash }}'
  CMAKE: msvc-dev-cmd -- uv run cmake

env:
  VCPKG_DISABLE_METRICS: 1

tasks:
  default:
    cmds:
      - task: configure
      - task: run

  commit-prepare:
    deps: [build]
    vars:
      COMMIT_MSG: "Update"
      IOS_BINDINGS_DIR: "{{.TASKFILE_DIR}}/bindings/ios"
      IOS_BINDINGS_MAKEFILE: "{{.TASKFILE_DIR}}/bindings/ios/Makefile"
    cmds:
      - cmd: 'git -C "{{ .IOS_BINDINGS_DIR }}" checkout -q -- "{{ fromSlash .IOS_BINDINGS_MAKEFILE }}"'
        ignore_error: true
      - cmd: 'git -C "{{ .TASKFILE_DIR }}" add .'

  model:
    internal: true
    vars:
      MODEL: '{{ default "base" .MODEL }}'
      MODEL_FILE: "ggml-{{ .MODEL }}.bin"
      MODEL_OUTPUT_REL_PATH: "models/{{ .MODEL_FILE }}"
      MODEL_OUTPUT_PATH: "{{ .TASKFILE_DIR }}/{{ .MODEL_OUTPUT_REL_PATH }}"
      MODEL_URL: "https://huggingface.co/ggerganov/whisper.cpp/resolve/main/{{.MODEL_FILE}}"
    status:
      - 'test -f "{{ fromSlash .MODEL_OUTPUT_PATH }}"'
    cmds:
      - cmd: >-
          pwsh
          -NoProfile
          -ExecutionPolicy Bypass
          -Command "Start-BitsTransfer -Source '{{ .MODEL_URL }}' -Destination '{{ fromSlash .MODEL_OUTPUT_PATH }}'"

  vcpkg:
    deps: [vcpkg-integrate]
    cmds:
      - cmd: '{{.RUN}} "{{.VCPKG_EXE}}" {{ .CLI_ARGS }}'

  check:
    deps: [build]
    vars:
      MODEL: '{{ default "base" .MODEL }}'
      SAMPLE: '{{ default "jfk" .SAMPLE }}'
      SAMPLE_WAV_PATH: "{{ .TASKFILE_DIR }}/samples/{{ .SAMPLE }}.wav"
      SAMPLE_OUTPUT_DIR: "{{ .BUILD_DIR }}/output"
      SAMPLE_OUTPUT: "{{ .SAMPLE_OUTPUT_DIR }}/{{ .SAMPLE }}"

      OUTPUT_SRT_PATH: "{{ .SAMPLE_OUTPUT }}.srt"
      MODEL_PATH: "{{ .TASKFILE_DIR }}/models/ggml-{{ .MODEL }}.bin"
    preconditions:
      - 'test -f "{{ .SAMPLE_WAV_PATH }}"'
    status:
      - 'test -f "{{ .OUTPUT_SRT_PATH }}"'
    cmds:
      - task: model
      - cmd: 'mkdir "{{ fromSlash .SAMPLE_OUTPUT_DIR }}"'
        ignore_error: true
      - task: run
        vars:
          CLI_ARGS: >-
            --output-srt
            --output-file "{{ fromSlash .SAMPLE_OUTPUT }}"
            --model "{{ fromSlash .MODEL_PATH }}"
            --file "{{ fromSlash .SAMPLE_WAV_PATH }}"
      - task: commit-prepare

  run:
    deps: [build]
    vars:
      CONFIG: '{{ default "Debug" .CONFIG }}'
      OUTPUT_DIR: '{{ joinPath .BUILD_DIR "bin" .CONFIG | fromSlash }}'
      OUTPUT_EXE: '{{ joinPath .OUTPUT_DIR "main.exe" }}'
    preconditions:
      - 'test -f "{{.OUTPUT_EXE}}"'
    cmds:
      - cmd: '{{ .RUN }} "{{ fromSlash .OUTPUT_EXE }}" {{ .CLI_ARGS }}'

  build:
    deps: [configure]
    sources:
      - "{{ .SLN }}"
    generates:
      - '{{ joinPath .BUILD_DIR "bin" "Debug" "main.exe" }}'
      - '{{ joinPath .BUILD_DIR "bin" "Release" "main.exe" }}'
    cmds:
      - task: msbuild
        vars:
          { CONFIG: Debug, PLATFORM: "{{ .ARCHITECTURE }}", SLN: "{{ .SLN }}" }
      - task: msbuild
        vars:
          {
            CONFIG: Release,
            PLATFORM: "{{ .ARCHITECTURE }}",
            SLN: "{{ .SLN }}",
          }

  configure:
    deps: [vcpkg-integrate]
    sources:
      - CMakeLists.txt
    generates:
      - "{{ .SLN }}"
    cmds:
      - cmd: >
          {{ .CMAKE }}
          -S "{{ .TASKFILE_DIR }}"
          -B "{{ .BUILD_DIR }}"
          -G "{{ .GENERATOR }}"
          -A "{{ .ARCHITECTURE }}"
          -DCMAKE_BUILD_TYPE="{{ .CONFIG }}"
          -DWHISPER_SDL2={{ .USE_SDL2 }}
          -DCMAKE_TOOLCHAIN_FILE="{{ fromSlash .TOOLCHAIN }}"

  msbuild:
    internal: true
    deps: [install-dependencies]
    vars:
      CONFIG: '{{.CONFIG | default "Debug"}}'
      PLATFORM: '{{.PLATFORM | default "x64"}}'
    preconditions:
      - '"{{.MSBUILD_EXE}}" --version'
      - 'test -f "{{.SLN}}"'
    cmds:
      - cmd: >
          "{{ .MSBUILD_EXE }}"
          -t:Build -p:Configuration="{{.CONFIG}}" -p:Platform="{{.PLATFORM}}"
          "{{ fromSlash .SLN }}"

  install-dependencies:
    deps: [install-packages-scoop-pkg-config]
    cmds:
      - task: install-packages
      - task: vcpkg-integrate

  scoop-install:
    desc: Install libraries with scoop
    status:
      - "scoop --version"
    cmds:
      - cmd: pwsh -NoProfile -Command 'iex "& {$(irm get.scoop.sh)} -RunAsAdmin"'
        platforms: [windows]
        ignore_error: true
      - cmd: pwsh -NoProfile -Command 'Join-Path (Resolve-Path ~).Path "scoop/shims" >> $Env:GITHUB_PATH'
        platforms: [windows]
        ignore_error: true

  git-submodule-init:
    status:
      - 'test -f "{{.VCPKG_BOOTSTRAP}}"'
    cmds:
      - cmd: 'git -C "{{.TASKFILE_DIR}}" submodule update --init --recursive'

  vcpkg-integrate:
    deps: [vcpkg-download]
    vars:
      OUTPUT_LOG_PATH: '{{ joinPath .BUILD_INT_DIR "vcpkg-integrate.log" }}'
    status:
      - 'test -f "{{ .OUTPUT_LOG_PATH}}"'
      - 'test "{{ .VCPKG_BRANCH }}" -ne "HEAD"'
    cmds:
      - cmd: >-
          mkdir -p "{{ dir .OUTPUT_LOG_PATH | fromSlash }}"
        ignore_error: true
      - cmd: >
          "{{ fromSlash .VCPKG_EXE }}" integrate install
      - cmd: >-
          "{{ fromSlash .VCPKG_EXE }}" install --allow-unsupported

  vcpkg-download:
    deps: [git-submodule-init]
    sources:
      - .gitmodules
    generates:
      - external/vcpkg/README.md
      - external/vcpkg/vcpkg.disable-metrics
    cmds:
      - cmd: git add .
      - cmd: git submodule update --init --recursive
      - cmd: '{{.RUN}} "{{ fromSlash .VCPKG_BOOTSTRAP }}" -disableMetrics'

  update-samples:
    status:
      - ffmpeg -version
      - wget --version
      - test -f samples/gb0.ogg
      - test -f samples/gb1.ogg
      - test -f samples/hp0.ogg
      - test -f samples/mm1.wav
    cmds:
      - cmd: wget --quiet --show-progress -O samples/gb0.ogg https://upload.wikimedia.org/wikipedia/commons/2/22/George_W._Bush%27s_weekly_radio_address_%28November_1%2C_2008%29.oga
      - cmd: wget --quiet --show-progress -O samples/gb1.ogg https://upload.wikimedia.org/wikipedia/commons/1/1f/George_W_Bush_Columbia_FINAL.ogg
      - cmd: wget --quiet --show-progress -O samples/hp0.ogg https://upload.wikimedia.org/wikipedia/en/d/d4/En.henryfphillips.ogg
      - cmd: wget --quiet --show-progress -O samples/mm1.wav https://cdn.openai.com/whisper/draft-20220913a/micro-machines.wav
      - cmd: ffmpeg -loglevel -0 -y -i samples/gb0.ogg -ar 16000 -ac 1 -c:a pcm_s16le samples/gb0.wav
      - cmd: ffmpeg -loglevel -0 -y -i samples/gb1.ogg -ar 16000 -ac 1 -c:a pcm_s16le samples/gb1.wav
      - cmd: ffmpeg -loglevel -0 -y -i samples/hp0.ogg -ar 16000 -ac 1 -c:a pcm_s16le samples/hp0.wav
      - cmd: ffmpeg -loglevel -0 -y -i samples/mm1.wav -ar 16000 -ac 1 -c:a pcm_s16le samples/mm0.wav
      - cmd: rm samples/mm1.wav

  install-packages:
    cmds:
      - task: install-packages-scoop-pkg-config

  install-packages-scoop-pkg-config:
    deps: [scoop-install]
    platforms: [windows]
    status:
      - pkg-config --version
    cmds:
      - cmd: scoop install extras/pkg-config-lite

  delete:
    internal: true
    requires: { vars: [TARGET_DIR] }
    status:
      - 'test -d "{{.TARGET_DIR}}"'
    cmds:
      - cmd: '{{.RUN}} if exist "{{.TARGET_DIR}}" rmdir /s /q "{{.TARGET_DIR}}"'
        platforms: [windows]
      - cmd: '{{.RUN}} rm -rf "{{.TARGET_DIR}}"'
        platforms: [linux, darwin]
